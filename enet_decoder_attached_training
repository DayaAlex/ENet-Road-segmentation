{"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"name":"ENet - Real Time Semantic Segmentation.ipynb","provenance":[],"toc_visible":true,"version":"0.3.2"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":7733151,"sourceType":"datasetVersion","datasetId":4518918},{"sourceId":171912700,"sourceType":"kernelVersion"},{"sourceId":40593,"sourceType":"modelInstanceVersion","isSourceIdPinned":true,"modelInstanceId":34179}],"dockerImageVersionId":30699,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# ENet -  Real Time Semantic Segmentation for Road segmentation\n\n**Journal paper:**<br/>\nLink to the paper: https://arxiv.org/pdf/1606.02147.pdf <br/>\n**Code references**<br/>\npython implementation :https://github.com/iArunava/ENet-Real-Time-Semantic-Segmentation<br/>\nlua implemenattion by paper author : https://github.com/e-lab/ENet-training\n\nDaya Alex 5/4/24","metadata":{"id":"UhGVcnMbgr7y"}},{"cell_type":"markdown","source":"## Wandb login","metadata":{}},{"cell_type":"code","source":"import wandb\n\nwandb.login()","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:36.338019Z","iopub.execute_input":"2024-04-28T16:33:36.338400Z","iopub.status.idle":"2024-04-28T16:33:46.452744Z","shell.execute_reply.started":"2024-04-28T16:33:36.338369Z","shell.execute_reply":"2024-04-28T16:33:46.451949Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Logging into wandb.ai. (Learn how to deploy a W&B server locally: https://wandb.me/wandb-server)\n\u001b[34m\u001b[1mwandb\u001b[0m: You can find your API key in your browser here: https://wandb.ai/authorize\n\u001b[34m\u001b[1mwandb\u001b[0m: Paste an API key from your profile and hit enter, or press ctrl+c to quit:","output_type":"stream"},{"output_type":"stream","name":"stdin","text":"  ········································\n"},{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Appending key for api.wandb.ai to your netrc file: /root/.netrc\n","output_type":"stream"},{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"True"},"metadata":{}}]},{"cell_type":"markdown","source":"## Install the dependencies and Import them","metadata":{"id":"8qnyf_pzhKXv"}},{"cell_type":"code","source":"#!pip install pytorch-lightning","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:46.454156Z","iopub.execute_input":"2024-04-28T16:33:46.454582Z","iopub.status.idle":"2024-04-28T16:33:46.458451Z","shell.execute_reply.started":"2024-04-28T16:33:46.454555Z","shell.execute_reply":"2024-04-28T16:33:46.457561Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"#pip install segmentation_models_pytorch","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:46.459796Z","iopub.execute_input":"2024-04-28T16:33:46.460350Z","iopub.status.idle":"2024-04-28T16:33:46.470979Z","shell.execute_reply.started":"2024-04-28T16:33:46.460316Z","shell.execute_reply":"2024-04-28T16:33:46.470099Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport cv2\nimport os\nfrom tqdm import tqdm\nfrom torchvision import transforms\nimport math\nimport random\nfrom torchmetrics import JaccardIndex\nimport albumentations as A\nfrom torch.utils.data import DataLoader, Dataset\nimport glob as glob\n#from segmentation_models_pytorch.losses import DiceLoss\n\n# import sys\n# sys.path.append('/kaggle/input/') \n# print(sys.path)\nimport metrics\n\n#from torch.optim.lr_scheduler import StepLR\n#import torch.optim.lr_scheduler as lr_scheduler\nfrom PIL import Image\n\n","metadata":{"id":"5NCTHdEqj317","execution":{"iopub.status.busy":"2024-04-28T16:33:46.472790Z","iopub.execute_input":"2024-04-28T16:33:46.473078Z","iopub.status.idle":"2024-04-28T16:33:54.353531Z","shell.execute_reply.started":"2024-04-28T16:33:46.473050Z","shell.execute_reply":"2024-04-28T16:33:54.352669Z"},"trusted":true},"execution_count":4,"outputs":[]},{"cell_type":"code","source":"device = torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:54.355471Z","iopub.execute_input":"2024-04-28T16:33:54.356143Z","iopub.status.idle":"2024-04-28T16:33:54.381978Z","shell.execute_reply.started":"2024-04-28T16:33:54.356102Z","shell.execute_reply":"2024-04-28T16:33:54.380964Z"},"trusted":true},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":"## Create the ENet model\n\nWe decided to to split the model to three sub classes:\n\n1) Initial block  \n\n2) RDDNeck - class for regular, downsampling and dilated bottlenecks\n\n3) ASNeck -  class for asymetric bottlenecks\n\n4) UBNeck - class for upsampling bottlenecks","metadata":{"id":"i26TZVXmhewY"}},{"cell_type":"code","source":"class InitialBlock(nn.Module):\n  \n  # Initial block of the model:\n  #         Input\n  #        /     \\\n  #       /       \\\n  # maxpool2d    conv2d-3x3\n  #       \\       /  \n  #        \\     /\n  #      concatenate\n  #          |\n  #         Batchnorm\n #        PReLU\n   \n    def __init__ (self,in_channels = 3,out_channels = 13):\n        super().__init__()\n\n\n        self.maxpool = nn.MaxPool2d(kernel_size=2, \n                                      stride = 2, \n                                      padding = 0)\n\n        self.conv = nn.Conv2d(in_channels, \n                                out_channels,\n                                kernel_size = 3,\n                                stride = 2, \n                                padding = 1)\n\n        self.prelu = nn.PReLU(16)\n\n        self.batchnorm = nn.BatchNorm2d(16)\n  \n    def forward(self, x):\n        \n        main = self.conv(x)\n        side = self.maxpool(x)\n        #print('main size ', main.size)\n        #print('side size ', side.size)\n        # concatenating on the channels axis\n        x = torch.cat((main, side), dim=1)\n        x = self.batchnorm(x)\n        x = self.prelu(x)\n        #print('init block size ',x.shape)\n        \n        return x","metadata":{"id":"kqHUezLfPBwn","execution":{"iopub.status.busy":"2024-04-28T16:33:54.383306Z","iopub.execute_input":"2024-04-28T16:33:54.383936Z","iopub.status.idle":"2024-04-28T16:33:54.394190Z","shell.execute_reply.started":"2024-04-28T16:33:54.383909Z","shell.execute_reply":"2024-04-28T16:33:54.393312Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"class RDDNeck(nn.Module):\n    def __init__(self, dilation, in_channels, out_channels, down_flag, relu=False, projection_ratio=4, p=0.1):\n    \n  # Regular|Dilated|Downsampling bottlenecks:\n  #\n  #     Bottleneck Input\n  #        /        \\\n  #     Identity     \\  \n  #       /          \\\n  # maxpooling2d   conv2d-1x1(when downsamp flag is ON, otherwise 2x2)\n  # (when downsamp)    | BN +PReLU\n  # (-flag is ON)    conv2d-3x3\n  #      |             | BN +PReLU\n  #      |         conv2d-1x1\n  #      |             |\n  #  Padding2d     Regularizer(BN + dropout)\n  #(when i/p ch !=o/p ch) /   \n  #        \\            /\n  #      Summing + PReLU\n  #\n  # Params: \n  #  dilation (bool) - if True: creating dilation bottleneck\n  #  down_flag (bool) - if True: creating downsampling bottleneck\n  #  projection_ratio - ratio between input and output channels\n  #  relu - if True: relu used as the activation function else: Prelu us used\n  #  p - dropout ratio\n        \n        super().__init__()\n        \n        # Define class variables\n        self.in_channels = in_channels\n        self.reduced_depth = int(out_channels // projection_ratio)\n        self.out_channels = out_channels\n        self.dilation = dilation\n        self.down_flag = down_flag\n        \n        # calculating the number of reduced channels\n        if self.down_flag:\n            self.stride = 2\n            self.conv1_kernel = 2\n        else:\n            self.stride = 1\n            self.conv1_kernel = 1\n        \n        if relu:\n            activation = nn.ReLU()\n        else:\n            activation = nn.PReLU()\n        \n        self.maxpool = nn.MaxPool2d(kernel_size = 2,\n                                      stride = 2,\n                                      padding = 0, return_indices=True)\n        \n        self.dropout = nn.Dropout2d(p=p)\n\n        self.prelu1 = activation\n        \n        self.conv1 = nn.Conv2d(in_channels = self.in_channels,\n                               out_channels = self.reduced_depth,\n                               kernel_size = self.conv1_kernel,\n                               stride = self.stride,\n                               padding = 0,\n                               bias = False,\n                               dilation = 1)\n        \n        self.conv2 = nn.Conv2d(in_channels = self.reduced_depth,\n                                  out_channels = self.reduced_depth,\n                                  kernel_size = 3,\n                                  stride = 1,\n                                  padding = self.dilation,\n                                  bias = True,\n                                  dilation = self.dilation)\n                                  \n        self.prelu2 = activation\n        \n        self.conv3 = nn.Conv2d(in_channels = self.reduced_depth,\n                                  out_channels = self.out_channels,\n                                  kernel_size = 1,\n                                  stride = 1,\n                                  padding = 0,\n                                  bias = False,\n                                  dilation = 1)\n        \n        self.prelu3 = activation\n        \n        self.batchnorm = nn.BatchNorm2d(self.reduced_depth)\n        self.batchnorm2 = nn.BatchNorm2d(self.out_channels)\n        self.identity = nn.Identity()\n        \n    def forward(self, x):\n        \n        #print(\"Input to layer:\", type(x), x.shape if not isinstance(x, tuple) else \"Tuple\")\n    \n        if not isinstance(x, tuple):\n        #print(x.shape)\n            bs = x.size()[0]\n        else:\n            bs = x[0].size()[0]\n            \n        #print(bs)\n        x_copy = self.identity(x)\n        \n        # Main branch\n        x = self.conv1(x)\n        #print(\" Conv1 called \")\n        x = self.batchnorm(x)\n        x = self.prelu1(x)\n        #print(self.conv1_kernel, self.stride, x.shape)\n        \n        x = self.conv2(x)\n        #print(\" Conv2 called \")\n        x = self.batchnorm(x)\n        x = self.prelu2(x)\n        #print(self.conv2.kernel_size, self.stride,self.dilation, x.shape)\n        \n        x = self.conv3(x)\n        #print(\" Conv3 called \")\n        x = self.batchnorm2(x)     \n        x = self.dropout(x)\n        #print(self.conv3.kernel_size, self.stride, x.shape)\n        \n        #other branch\n        if self.down_flag:\n            #print('downsampling flag is true')\n            x_copy, indices = self.maxpool(x_copy)\n            \n        if self.in_channels != self.out_channels:\n            #print('input and output channels diffrence, so padding of side channel being carried out')\n            out_shape = self.out_channels - self.in_channels\n            #print('extra channels required ', out_shape)\n            \n            #padding and concatenating in order to match the channels axis of the side and main branches\n            extras = torch.zeros((bs, out_shape, x.shape[2], x.shape[3]), device=x.device)\n            #print('x copy shape ',x_copy.shape)\n            #print('extras shape ', extras.shape)\n            x_copy = torch.cat((x_copy, extras), dim = 1)\n            #print('final side route shape ,', x_copy.shape)\n\n        # Summing main and side branches\n        x = x + x_copy\n        x = self.prelu3(x)\n        #print('final layer ', x.shape)\n        \n        if self.down_flag:\n            return x, indices\n        else:\n            return x","metadata":{"id":"r-nTIAS9bd9z","execution":{"iopub.status.busy":"2024-04-28T16:33:54.395691Z","iopub.execute_input":"2024-04-28T16:33:54.396048Z","iopub.status.idle":"2024-04-28T16:33:54.414679Z","shell.execute_reply.started":"2024-04-28T16:33:54.396018Z","shell.execute_reply":"2024-04-28T16:33:54.413825Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"class ASNeck(nn.Module):\n    def __init__(self, in_channels, out_channels, projection_ratio=4):\n      \n  # Asymetric bottleneck:\n  #\n  #     Bottleneck Input\n  #        /        \\\n  #       /          \\\n  #      |         conv2d-1x1\n  # Identity           | PReLU\n  #      |         conv2d-1x5\n  #      |             |\n  #      |         conv2d-5x1\n  #      |             | PReLU\n  #      |         conv2d-1x1\n  #      |             |\n  #       \\     Regularizer\n  #       \\           /  \n  #        \\         /\n  #      Summing + PReLU\n  #\n  # Params:    \n  #  projection_ratio - ratio between input and output channels\n        \n        super().__init__()\n        \n        # Define class variables\n        self.in_channels = in_channels\n        self.reduced_depth = int(out_channels // projection_ratio)\n        self.out_channels = out_channels\n        \n        self.dropout = nn.Dropout2d(p=0.1)\n        \n        self.conv1 = nn.Conv2d(in_channels = self.in_channels,\n                               out_channels = self.reduced_depth,\n                               kernel_size = 1,\n                               stride = 1,\n                               padding = 0,\n                               bias = False)\n        \n        self.prelu1 = nn.PReLU()\n        \n        self.conv21 = nn.Conv2d(in_channels = self.reduced_depth,\n                                  out_channels = self.reduced_depth,\n                                  kernel_size = (5, 1),\n                                  stride = 1,\n                                  padding = (2, 0),\n                                  bias = False)\n        \n        self.conv22 = nn.Conv2d(in_channels = self.reduced_depth,\n                                  out_channels = self.reduced_depth,\n                                  kernel_size = (1, 5),\n                                  stride = 1,\n                                  padding = (0, 2),\n                                  bias = True)############TRUE bias in original code###############\n        \n        self.prelu2 = nn.PReLU()\n        \n        self.conv3 = nn.Conv2d(in_channels = self.reduced_depth,\n                                  out_channels = self.out_channels,\n                                  kernel_size = 1,\n                                  stride = 1,\n                                  padding = 0,\n                                  bias = False)\n        \n        self.prelu3 = nn.PReLU()\n        \n        self.batchnorm = nn.BatchNorm2d(self.reduced_depth)\n        self.batchnorm2 = nn.BatchNorm2d(self.out_channels)\n        self.identity = nn.Identity()\n        \n    def forward(self, x):\n   \n        #main branch\n        x_copy = self.identity(x)\n        #print('side branch')\n        \n        # Side Branch\n        x = self.conv1(x)\n        #print('conv1 called')\n        x = self.batchnorm(x)\n        x = self.prelu1(x)\n        #print(self.conv1.kernel_size,self.conv1.stride, x.shape)\n        \n        x = self.conv21(x)\n        #print('conv21 called')\n        #print(self.conv21.kernel_size, self.conv21.stride, x.shape)\n        x = self.conv22(x)\n        #print('conv22 called')\n        #print(self.conv22.kernel_size, self.conv22.stride, x.shape)\n        x = self.batchnorm(x)\n        x = self.prelu2(x)\n        \n        x = self.conv3(x)\n        #print('conv3 called')   \n        x = self.dropout(x)\n        x = self.batchnorm2(x)\n        #print('final main ',self.conv3.kernel_size,self.conv3.stride, x.shape)\n\n        # Summing main and side branches\n        x = x + x_copy\n        x = self.prelu3(x)\n        #print('final total ', x.shape)\n        \n        return x","metadata":{"id":"tb_i1sCvtmMF","execution":{"iopub.status.busy":"2024-04-28T16:33:54.415795Z","iopub.execute_input":"2024-04-28T16:33:54.416075Z","iopub.status.idle":"2024-04-28T16:33:54.430398Z","shell.execute_reply.started":"2024-04-28T16:33:54.416041Z","shell.execute_reply":"2024-04-28T16:33:54.429540Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"class ENetEncoder(nn.Module):\n  \n  # Creating Enet model!\n  \n    def __init__(self, C):\n        super().__init__()\n        \n        # Define class variables\n        # C - number of classes\n        self.C = C\n        # The initial block\n        self.init = InitialBlock()\n        \n        # The first bottleneck\n        self.b10 = RDDNeck(dilation=1, \n                           in_channels=16, \n                           out_channels=64, \n                           down_flag=True, \n                           p=0.01)\n        \n        self.b11 = RDDNeck(dilation=1, \n                           in_channels=64, \n                           out_channels=64, \n                           down_flag=False, \n                           p=0.01)\n        \n        self.b12 = RDDNeck(dilation=1, \n                           in_channels=64, \n                           out_channels=64, \n                           down_flag=False, \n                           p=0.01)\n        \n        self.b13 = RDDNeck(dilation=1, \n                           in_channels=64, \n                           out_channels=64, \n                           down_flag=False, \n                           p=0.01)\n        \n        self.b14 = RDDNeck(dilation=1,\n                           in_channels=64, \n                           out_channels=64, \n                           down_flag=False, \n                           p=0.01)\n        \n        \n        # The second bottleneck\n        self.b20 = RDDNeck(dilation=1, \n                           in_channels=64, \n                           out_channels=128, \n                           down_flag=True)\n        \n        self.b21 = RDDNeck(dilation=1, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b22 = RDDNeck(dilation=2, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b23 = ASNeck(in_channels=128, \n                          out_channels=128)\n        \n        self.b24 = RDDNeck(dilation=4, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b25 = RDDNeck(dilation=1, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b26 = RDDNeck(dilation=8, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b27 = ASNeck(in_channels=128, \n                          out_channels=128)\n        self.b28 = RDDNeck(dilation=16, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        \n        # The third bottleneck\n        self.b31 = RDDNeck(dilation=1, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b32 = RDDNeck(dilation=2, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b33 = ASNeck(in_channels=128, \n                          out_channels=128)\n        \n        self.b34 = RDDNeck(dilation=4, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b35 = RDDNeck(dilation=1, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b36 = RDDNeck(dilation=8, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        self.b37 = ASNeck(in_channels=128, \n                          out_channels=128)\n        \n        self.b38 = RDDNeck(dilation=16, \n                           in_channels=128, \n                           out_channels=128, \n                           down_flag=False)\n        \n        #fully convolutional layer to get the encoder output\n        self.enc_conv = nn.Conv2d(in_channels=128,\n                                 out_channels = 12,\n                                 kernel_size=1,\n                                 stride=1,\n                                 padding=0,\n                                 bias =False)\n    def forward(self, x):\n        \n        # The initial block\n        x = self.init(x)\n        #print('^^^^^^^^^^^^^^init block^^^^^^^^^^^^^^^^')\n        \n        # The first bottleneck\n        x, i1 = self.b10(x)\n        #print('................bottleneck_10 complete................')\n        x = self.b11(x)\n        #print('................bottleneck_11 complete...........')\n        x = self.b12(x)\n        #print('...............bottleneck_12 complete............')\n        x = self.b13(x)\n        #print('............bottleneck_13 complete............')\n        x = self.b14(x)\n        #print('.................bottleneck_14 complete.............')\n        \n        # The second bottleneck\n        x, i2 = self.b20(x)\n        #print('----------------bottleneck_20 complete-----------')\n        x = self.b21(x)\n        #print('----------------bottleneck_21 complete-----------')\n        x = self.b22(x)\n        #print('-----------bottleneck_22 complete--------------')\n        x = self.b23(x)\n        #print('-----------bottleneck_23 complete---------------')\n        x = self.b24(x)\n        #print('--------------bottleneck_24 complete------------')\n        x = self.b25(x)\n        #print('-------------bottleneck_25 complete------------')\n        x = self.b26(x)\n        #print('-------------bottleneck_26 complete-------------')\n        x = self.b27(x)\n        #print('-------------bottleneck_27 complete-------------')\n        x = self.b28(x)\n        #print('------------bottleneck_28 complete----------------')\n        \n        # The third bottleneck\n        x = self.b31(x)\n        #print('********bottleneck_31 complete************')\n        x = self.b32(x)\n        #print('********bottleneck_32 complete************')\n        x = self.b33(x)\n        #print('********bottleneck_33 complete************')\n        x = self.b34(x)\n        #print('********bottleneck_34 complete************')\n        x = self.b35(x)\n        #print('********bottleneck_35 complete************')\n        x = self.b36(x)\n        #print('********bottleneck_36 complete************')\n        x = self.b37(x)\n        #print('********bottleneck_37 complete************')\n        x = self.b38(x)\n        #print('********bottleneck_38 complete************')\n        \n        if self.enc_conv is not None:\n            x = self.enc_conv(x)\n      \n        return x, i1,i2\n        \n    def remove_last_conv(self):\n        # This method dynamically changes the model to not use the last conv layer\n        self.enc_conv = None","metadata":{"id":"Z1pz_bve690y","execution":{"iopub.status.busy":"2024-04-28T16:33:54.431469Z","iopub.execute_input":"2024-04-28T16:33:54.431868Z","iopub.status.idle":"2024-04-28T16:33:54.455307Z","shell.execute_reply.started":"2024-04-28T16:33:54.431846Z","shell.execute_reply":"2024-04-28T16:33:54.454399Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":"## Instantiate the ENet model","metadata":{"id":"Jg1Rnb3uhnxR"}},{"cell_type":"markdown","source":"Move the model to cuda if available","metadata":{"id":"W5kaK6CnhwG_"}},{"cell_type":"code","source":"encoder = ENetEncoder(12)\nencoder.to(device);","metadata":{"id":"lZcgE-F_hvxX","execution":{"iopub.status.busy":"2024-04-28T16:33:54.459392Z","iopub.execute_input":"2024-04-28T16:33:54.459982Z","iopub.status.idle":"2024-04-28T16:33:54.680611Z","shell.execute_reply.started":"2024-04-28T16:33:54.459958Z","shell.execute_reply":"2024-04-28T16:33:54.679585Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"print(device)","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:54.681781Z","iopub.execute_input":"2024-04-28T16:33:54.682052Z","iopub.status.idle":"2024-04-28T16:33:54.686594Z","shell.execute_reply.started":"2024-04-28T16:33:54.682028Z","shell.execute_reply":"2024-04-28T16:33:54.685603Z"},"trusted":true},"execution_count":11,"outputs":[{"name":"stdout","text":"cuda:0\n","output_type":"stream"}]},{"cell_type":"code","source":"path_to_checkpoint = '/kaggle/input/enet_camvid_encoder/pytorch/underscore/1/encoder_camvid_1199th_epoch_indices_with_state_dic.pth'\ncheckpoint = torch.load(path_to_checkpoint)\nstate_dic = checkpoint['state_dict']\n\nmx_pool_idx_1 = checkpoint['maxpool_indices_1']\nmx_pool_idx_2 = checkpoint['maxpool_indices_2']\nprint(checkpoint['jacc'].item())","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:54.687721Z","iopub.execute_input":"2024-04-28T16:33:54.687975Z","iopub.status.idle":"2024-04-28T16:33:54.949181Z","shell.execute_reply.started":"2024-04-28T16:33:54.687953Z","shell.execute_reply":"2024-04-28T16:33:54.948245Z"},"trusted":true},"execution_count":12,"outputs":[{"name":"stdout","text":"0.2445446401834488\n","output_type":"stream"}]},{"cell_type":"code","source":"print(mx_pool_idx_1.shape)\nprint(mx_pool_idx_2.shape)","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:54.950336Z","iopub.execute_input":"2024-04-28T16:33:54.950625Z","iopub.status.idle":"2024-04-28T16:33:54.955285Z","shell.execute_reply.started":"2024-04-28T16:33:54.950599Z","shell.execute_reply":"2024-04-28T16:33:54.954403Z"},"trusted":true},"execution_count":13,"outputs":[{"name":"stdout","text":"torch.Size([7, 16, 90, 120])\ntorch.Size([7, 64, 45, 60])\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## remove convolutional layers from loaded enet encoder","metadata":{}},{"cell_type":"code","source":"encoder.load_state_dict(state_dic)\nencoder.remove_last_conv()\nencoder.to(device);","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:54.956337Z","iopub.execute_input":"2024-04-28T16:33:54.956573Z","iopub.status.idle":"2024-04-28T16:33:54.983931Z","shell.execute_reply.started":"2024-04-28T16:33:54.956552Z","shell.execute_reply":"2024-04-28T16:33:54.983079Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"\nclass UBNeck(nn.Module):\n#    bottleneck_input \n#     /          \\\n#    identity     conv 1x1\n#    conv 1x1       bn\n#    bn\n# \n\n    \n    def __init__(self, in_channels, out_channels, projection_ratio=4):\n        \n        super().__init__()\n        \n        # Define class variables\n        self.in_channels = in_channels\n        self.reduced_depth = int(in_channels / projection_ratio)\n        self.out_channels = out_channels\n        \n        self.identity = nn.Identity()\n        self.unpool = nn.MaxUnpool2d(kernel_size = 2,\n                                     stride = 2)\n        \n        self.side_conv = nn.Conv2d(in_channels = self.in_channels,\n                                    out_channels = self.out_channels,\n                                    kernel_size = 1,\n                                    stride = 1,\n                                    padding = 0,\n                                    bias = False)\n        \n        \n        self.conv1 = nn.Conv2d(in_channels = self.in_channels,\n                               out_channels = self.reduced_depth,\n                               kernel_size = 1,\n                               stride = 1,\n                               padding = 0,\n                               bias = False)\n        \n        \n        self.relu = nn.ReLU()\n        \n        self.convt2 = nn.ConvTranspose2d(in_channels = self.reduced_depth,\n                                  out_channels = self.reduced_depth,\n                                  kernel_size = 3,\n                                  stride = 2,\n                                  padding = 1,\n                                  output_padding = 1,\n                                  bias = True)########bias True in original code###########\n        \n        self.conv3 = nn.Conv2d(in_channels = self.reduced_depth,\n                                  out_channels = self.out_channels,\n                                  kernel_size = 1,\n                                  padding = 0,\n                                  bias = False)\n        \n        self.batchnorm1 = nn.BatchNorm2d(self.reduced_depth)\n        self.batchnorm3 = nn.BatchNorm2d(self.out_channels)\n        \n    def forward(self, x, indices):\n        x_copy = self.identity(x)\n        \n        # Main Branch\n        x = self.conv1(x)\n        x = self.batchnorm1(x)\n        x = self.relu(x)\n        \n        x = self.convt2(x)\n        x = self.batchnorm1(x)\n        x = self.relu(x)\n        \n        x = self.conv3(x)\n        x = self.batchnorm3(x)\n                \n        # Side Branch\n        \n        x_copy = self.side_conv(x_copy)\n        x_copy = self.batchnorm3(x_copy)\n        x_copy = self.unpool(x_copy, indices, output_size=x.size())\n        \n        # Concat\n        x = x + x_copy\n        x = self.relu(x)\n        \n        return x\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:54.985001Z","iopub.execute_input":"2024-04-28T16:33:54.985253Z","iopub.status.idle":"2024-04-28T16:33:54.998204Z","shell.execute_reply.started":"2024-04-28T16:33:54.985230Z","shell.execute_reply":"2024-04-28T16:33:54.997314Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"class DecoderRegularNeck(nn.Module):\n    def __init__(self, in_channels, out_channels, projection_ratio = 4):\n        super().__init__()\n\n        self.in_channels = in_channels\n        self.out_channels = out_channels\n        self.reduced_depth = in_channels//projection_ratio\n        self.relu = nn.ReLU()\n        self.identity = nn.Identity()\n        self.conv1 = nn.Conv2d(in_channels= self.in_channels,\n                             out_channels = self.reduced_depth,\n                             kernel_size = 1, \n                             stride = 1,\n                             padding = 0,\n                             bias = False\n                             )\n        self.conv2 = nn.Conv2d(in_channels = self.reduced_depth,\n                             out_channels = self.reduced_depth,\n                             kernel_size = 3, \n                             stride = 1,\n                             padding = 1,\n                             bias = True  \n                             )\n        self.conv3 = nn.Conv2d(in_channels= self.reduced_depth,\n                             out_channels = self.out_channels,\n                             kernel_size = 1, \n                             stride = 1,\n                             padding = 0,\n                             bias = False\n                              )\n        self.batchnorm = nn.BatchNorm2d(self.reduced_depth)\n        self.batchnorm2 = nn.BatchNorm2d(self.out_channels)\n\n    def forward(self, x):\n      #side branch\n        x_copy = self.identity(x)\n\n      #main branch\n        x = self.conv1(x)\n        x = self.batchnorm(x)\n        x = self.relu(x)\n        x = self.conv2(x)\n        x = self.batchnorm(x)\n        x = self.relu(x)\n        x = self.conv3(x)\n        x = self.batchnorm2(x)\n      \n\n        x = x + x_copy\n        x = self.relu(x)\n        return x\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:54.999540Z","iopub.execute_input":"2024-04-28T16:33:54.999895Z","iopub.status.idle":"2024-04-28T16:33:55.013475Z","shell.execute_reply.started":"2024-04-28T16:33:54.999865Z","shell.execute_reply":"2024-04-28T16:33:55.012565Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"class ENetDecoder(nn.Module):\n    def __init__(self, n_classes, mx_pool_idx_1, mx_pool_idx2):\n\n        super().__init__()\n        self.n_classes = n_classes\n\n        #4th stage\n        self.b40 = UBNeck(in_channels = 128,\n                                out_channels = 64)\n        self.b41 = DecoderRegularNeck(in_channels = 64,\n                                            out_channels = 64)\n        self.b42 = DecoderRegularNeck(in_channels = 64,\n                                            out_channels = 64)\n        \n        #5th stage\n        self.b50 = UBNeck(in_channels = 64,\n                                out_channels = 16)\n        self.b51 = DecoderRegularNeck(in_channels = 16,\n                                            out_channels = 16)\n        \n        #fullconv layer \n        self.fconv = nn.ConvTranspose2d(in_channels = 16,\n                                        out_channels = self.n_classes,\n                                        kernel_size = 2,\n                                        stride = 2,\n                                        bias = True\n                                            )\n\n    def forward(self, x,  mx_pool_idx_1,  mx_pool_idx_2):\n        x = self.b40(x, mx_pool_idx_2)\n        x = self.b41(x)\n        x = self.b42(x)\n        x = self.b50(x, mx_pool_idx_1)\n        x = self.b51(x)\n        x = self.fconv(x)\n        return x","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.014594Z","iopub.execute_input":"2024-04-28T16:33:55.014871Z","iopub.status.idle":"2024-04-28T16:33:55.028061Z","shell.execute_reply.started":"2024-04-28T16:33:55.014849Z","shell.execute_reply":"2024-04-28T16:33:55.027239Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"decoder = ENetDecoder(12,mx_pool_idx_1, mx_pool_idx_2 )\ndecoder.to(device);","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.029165Z","iopub.execute_input":"2024-04-28T16:33:55.029482Z","iopub.status.idle":"2024-04-28T16:33:55.049504Z","shell.execute_reply.started":"2024-04-28T16:33:55.029457Z","shell.execute_reply":"2024-04-28T16:33:55.048765Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"class ENet(nn.Module):\n    def __init__(self, encoder, decoder):\n        super().__init__()\n        self.encoder = encoder\n        self.decoder = decoder\n        \n    def forward(self, x):\n        x, i1, i2 = self.encoder(x)\n        x = self.decoder(x, i1,i2)\n        \n        return x","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.050537Z","iopub.execute_input":"2024-04-28T16:33:55.050788Z","iopub.status.idle":"2024-04-28T16:33:55.056187Z","shell.execute_reply.started":"2024-04-28T16:33:55.050766Z","shell.execute_reply":"2024-04-28T16:33:55.055223Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"model = ENet(encoder, decoder)\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.057322Z","iopub.execute_input":"2024-04-28T16:33:55.057616Z","iopub.status.idle":"2024-04-28T16:33:55.065898Z","shell.execute_reply.started":"2024-04-28T16:33:55.057593Z","shell.execute_reply":"2024-04-28T16:33:55.065120Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":"## Data pipeline","metadata":{}},{"cell_type":"code","source":"def verify_dataset_normalization(loader,h=360,w=480):\n    \"\"\"finds mean and std dev for whole data batch\n    \"\"\"\n    # Initialize accumulators\n    channel_sum = torch.tensor([0.0, 0.0, 0.0])\n    channel_squared_sum = torch.tensor([0.0, 0.0, 0.0])\n    num_batches = 0\n\n    for images, _ in train_loader:\n        #print(images.shape)\n        # Accumulate sum and squared sum for each channel\n        channel_sum += images.sum(dim=[0, 2, 3])\n        channel_squared_sum += (images ** 2).sum(dim=[0, 2, 3])\n        num_batches += images.shape[0]\n\n    # Calculate mean and standard deviation\n    mean = channel_sum / (num_batches * h * w)\n    std = (channel_squared_sum / (num_batches * h * w) - mean ** 2) ** 0.5\n\n    return mean, std","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.066864Z","iopub.execute_input":"2024-04-28T16:33:55.067163Z","iopub.status.idle":"2024-04-28T16:33:55.076807Z","shell.execute_reply.started":"2024-04-28T16:33:55.067140Z","shell.execute_reply":"2024-04-28T16:33:55.075973Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"def augmentation(mode='train', h= 360, w =480):\n    \"\"\" resizes image to input size and mask to a downsampled size, \n        applies horizontal flip and color jitter augmentation only to trainsets\n        \n    \"\"\"\n    if mode == 'train':\n        img_transformation = A.Compose([\n                        A.Resize(h,w),\n                        A.HorizontalFlip(p= 0.5),\n                        #A.ColorJitter(brightness=0.2, contrast=0.2, saturation=0.2, hue=0.1),\n\n                    ])\n        #mask size different from image size\n        mask_transformation = A.Compose([\n                    A.Resize(h, w),\n                    A.HorizontalFlip(p=0.5)\n                    ])\n        \n    else:\n        img_transformation =A.Resize(h, w)\n        mask_transformation = A.Resize(h, w)\n        \n    return img_transformation,  mask_transformation","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.077888Z","iopub.execute_input":"2024-04-28T16:33:55.078374Z","iopub.status.idle":"2024-04-28T16:33:55.089670Z","shell.execute_reply.started":"2024-04-28T16:33:55.078347Z","shell.execute_reply":"2024-04-28T16:33:55.088966Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"#img = cv2.imread('/kaggle/input/CamVid/train/', cv2.COLOR_BGR2RGB)\n#mask = cv2.imread()","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.090668Z","iopub.execute_input":"2024-04-28T16:33:55.090919Z","iopub.status.idle":"2024-04-28T16:33:55.098658Z","shell.execute_reply.started":"2024-04-28T16:33:55.090897Z","shell.execute_reply":"2024-04-28T16:33:55.097918Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"class CamvidDataset(Dataset):\n    \"\"\"custom camvid datset that returns images and the corresponding masks after augmentation and normalisation  \n        \n    \"\"\"\n    def __init__(self, img_path, mask_path, augmentation, norm_transform=True, road_idx=None):\n        self.filenames_t = os.listdir(img_path)\n        self.img_path = img_path\n        self.mask_path = mask_path\n        self.norm_transform = norm_transform\n        self.augmentation = augmentation\n        #for exttracting road mask\n        #self.road_idx = road_idx \n\n    def __len__(self):\n        return len(self.filenames_t)\n\n    def __getitem__(self, idx):\n        each_img_path = os.path.join(self.img_path, self.filenames_t[idx])\n        each_mask_path = os.path.join(self.mask_path, self.filenames_t[idx])\n        \n#         img = cv2.imread(each_img_path, cv2.COLOR_BGR2RGB)\n        img = cv2.imread(each_img_path, cv2.IMREAD_COLOR)  # Load the image in BGR color space\n        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)         # Convert from BGR to RGB\n\n        label_array = cv2.imread(each_mask_path, cv2.IMREAD_GRAYSCALE)#h,w array datatype\n        label = np.expand_dims(label_array, axis = -1)#h,w,c\n        \n        if self.augmentation:\n            img_transforms, mask_transforms = self.augmentation\n            seed = 7\n            random.seed(seed)\n            img = img_transforms(image=img)['image']# albumentations must be passed with named argument, and gets stored with that name as key\n            random.seed(seed)\n            mask = mask_transforms(image=label)['image']\n            \n        if self.norm_transform:\n            normalize_tensor = transforms.Compose([\n                            transforms.ToTensor(),\n                                     ])\n            img = normalize_tensor(img)\n            \n        if not isinstance(mask, torch.Tensor):\n            mask = torch.tensor(mask, dtype=torch.uint8)\n        mask = mask.permute(2, 0, 1)#c,h,w\n        #print(mask.shape)\n        mask = mask.squeeze()#h,w\n        #print(mask.shape)\n\n        return img, mask\n\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.099718Z","iopub.execute_input":"2024-04-28T16:33:55.100039Z","iopub.status.idle":"2024-04-28T16:33:55.111538Z","shell.execute_reply.started":"2024-04-28T16:33:55.100009Z","shell.execute_reply":"2024-04-28T16:33:55.110586Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"class Idd7ClassesDataset(Dataset):\n    def __init__(self, img_path, mask_path, augmentation, norm_transform=True, road_idx=None):\n        self.filenames_t = glob.glob(img_path+f'*\\*.jpg')\n        self.filenames_s = glob.glob(mask_path+f'*\\*[0-9]_label.png')\n        self.norm_transform = norm_transform\n        self.norm_transform = norm_transform\n        self.augmentation = augmentation\n        #self.road_idx = road_idx\n\n    def __len__(self):\n        return len(self.filenames_t)\n\n    def __getitem__(self, idx):\n        each_img_path = self.filenames_t[idx]\n        each_mask_path = self.filenames_s[idx]\n        img = cv2.imread(each_img_path, cv2.COLOR_BGR2RGB)\n        label_array = cv2.imread(each_mask_path, cv2.IMREAD_GRAYSCALE)#h,w array datatype\n        label = np.expand_dims(label_array, axis = -1)#h,w,c\n        \n        if self.augmentation:\n            img_transforms, mask_transforms = self.augmentation\n            seed = 7\n            random.seed(seed)\n            img = img_transforms(image=img)['image']# albumentations must be passed with named argument, and gets stored with that name as key\n            random.seed(seed)\n            mask = mask_transforms(image=label)['image']\n            \n        if self.norm_transform:\n            normalize_tensor = transforms.Compose([\n                            transforms.ToTensor()\n                            #transforms.Normalize([0.3576, 0.3713, 0.3657], \n                                                #[0.2608, 0.2723, 0.2943])\n                                     ])\n            img = normalize_tensor(img)\n            \n        if not isinstance(mask, torch.Tensor):\n            mask = torch.tensor(mask, dtype=torch.uint8)\n        mask = mask.permute(2, 0, 1)#c,h,w\n        #print(mask.shape)\n        mask = mask.squeeze()#h,w\n        #print(mask.shape)\n\n        return img, mask\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.112517Z","iopub.execute_input":"2024-04-28T16:33:55.112784Z","iopub.status.idle":"2024-04-28T16:33:55.126148Z","shell.execute_reply.started":"2024-04-28T16:33:55.112762Z","shell.execute_reply":"2024-04-28T16:33:55.125313Z"},"trusted":true},"execution_count":25,"outputs":[]},{"cell_type":"code","source":"train_dataset = CamvidDataset('/kaggle/input/camvid-seg-12/CamVid/train/','/kaggle/input/camvid-seg-12/CamVid/trainannot/',augmentation('train'))\nval_dataset = CamvidDataset('/kaggle/input/camvid-seg-12/CamVid/val/','/kaggle/input/camvid-seg-12/CamVid/valannot/',augmentation('val'))\ntest_dataset = CamvidDataset('/kaggle/input/camvid-seg-12/CamVid/test/','/kaggle/input/camvid-seg-12/CamVid/testannot/',augmentation('test'))\n\n# train_dataset = Idd7ClassesDataset(\"/kaggle/input/idd-lite1-6k/idd20k_lite/leftImg8bit/train/\",\n#                                     \"/kaggle/input/idd-lite1-6k/idd20k_lite/gtFine/train/\", augmentation('train'))\n# val_dataset = Idd7ClassesDataset(\"/kaggle/input/idd-lite1-6k/idd20k_lite/leftImg8bit/val/\",\n#                                     \"/kaggle/input/idd-lite1-6k/idd20k_lite/gtFine/val/\",augmentation('val'))\n\ntrain_loader = DataLoader(train_dataset, batch_size=10, shuffle=True)\nval_loader = DataLoader(val_dataset, batch_size=10, shuffle=False)\n# test_loader = DataLoader(test_dataset, batch_size=10, shuffle=False) \n    \nmean_train, std_train = verify_dataset_normalization(train_loader)\nmean_val, std_val = verify_dataset_normalization(val_loader)\n# mean_test, std_test = verify_dataset_normalization(test_loader)\n\nprint(f'mean and std dev of train set is {mean_train}, {std_train}')\nprint(f'mean and std dev of val set is {mean_val}, {std_val}')\n# print(f'mean and std dev of test set is {mean_test}, {std_test}')\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:33:55.127301Z","iopub.execute_input":"2024-04-28T16:33:55.127572Z","iopub.status.idle":"2024-04-28T16:34:07.788448Z","shell.execute_reply.started":"2024-04-28T16:33:55.127550Z","shell.execute_reply":"2024-04-28T16:34:07.787468Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"mean and std dev of train set is tensor([0.4119, 0.4251, 0.4327]), tensor([0.3071, 0.3116, 0.3072])\nmean and std dev of val set is tensor([0.4119, 0.4251, 0.4327]), tensor([0.3071, 0.3116, 0.3072])\n","output_type":"stream"}]},{"cell_type":"code","source":"def get_wts(dataset):\n    loader = DataLoader(dataset, batch_size=1, shuffle=True)\n\n    hist = torch.zeros(12)\n    for batch in tqdm(loader):\n        _, mask = batch\n        #print(mask.shape)\n        mask = mask.squeeze(0).float()\n        #print(mask.shape)\n\n        hist += torch.histc(mask, 12, 0,11 )\n\n    norm_hist = hist/torch.sum(hist)\n\n    class_wts = torch.ones(12)\n    for idx in range(12):\n        if hist[idx]<1 or idx ==11:\n            class_wts[idx] = 0\n        else:\n            class_wts[idx] = 1/torch.log(1.02 + norm_hist[idx])\n\n    return class_wts\n\ntr_weights = get_wts(train_dataset)\nvl_weights = get_wts(val_dataset)\nprint('class wts of train ', tr_weights)\nprint('class wts of val ', vl_weights)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:34:07.789567Z","iopub.execute_input":"2024-04-28T16:34:07.789847Z","iopub.status.idle":"2024-04-28T16:34:14.943358Z","shell.execute_reply.started":"2024-04-28T16:34:07.789821Z","shell.execute_reply":"2024-04-28T16:34:14.942335Z"},"trusted":true},"execution_count":27,"outputs":[{"name":"stderr","text":"100%|██████████| 367/367 [00:04<00:00, 78.34it/s]\n100%|██████████| 101/101 [00:02<00:00, 41.24it/s]","output_type":"stream"},{"name":"stdout","text":"class wts of train  tensor([ 5.7920,  4.4403, 34.0217,  3.4469, 15.9119,  9.0202, 32.0139, 32.4789,\n        13.2072, 38.3876, 44.1345,  0.0000])\nclass wts of val  tensor([ 9.4382,  4.0557, 39.4938,  3.7082,  9.8205,  5.9397, 35.0727, 20.1887,\n        27.1925, 38.2266, 24.2075,  0.0000])\n","output_type":"stream"},{"name":"stderr","text":"\n","output_type":"stream"}]},{"cell_type":"code","source":"def decode_segmap(image, threshold=0.5):\n    \n    #print(image)#RGB\n    Sky = [0, 0, 0]\n    Building = [0, 0, 153]\n    Pole = [0, 0, 255]\n    Road = [51, 153, 255]\n    Pavement = [0, 255, 255]\n    Tree = [128, 255, 0]\n    SignSymbol = [255, 255, 0]\n    Fence = [64, 64, 128]\n    Car = [255, 128, 0]\n    Pedestrian = [255, 0, 127]\n    Bicyclist = [255, 204, 255]\n    Background_scene = [255,255,255]\n\n    label_colours = np.array([Sky, Building, Pole, Road, \n                              Pavement, Tree, SignSymbol, Fence, Car, \n                              Pedestrian, Bicyclist, Background_scene]).astype(np.uint8)\n    \n    #print(label_colours.shape)\n    r = np.zeros_like(image).astype(np.uint8)\n    g = np.zeros_like(image).astype(np.uint8)\n    b = np.zeros_like(image).astype(np.uint8)\n    \n    for l in range(0, 12):\n        r[image == l] = label_colours[l, 0]\n        g[image == l] = label_colours[l, 1]\n        b[image == l] = label_colours[l, 2]\n\n    rgb = np.zeros((image.shape[0], image.shape[1], 3)).astype(np.uint8)\n    rgb[:, :, 0] = r\n    rgb[:, :, 1] = g\n    rgb[:, :, 2] = b\n    return rgb\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:34:14.950239Z","iopub.execute_input":"2024-04-28T16:34:14.950592Z","iopub.status.idle":"2024-04-28T16:34:14.961952Z","shell.execute_reply.started":"2024-04-28T16:34:14.950550Z","shell.execute_reply":"2024-04-28T16:34:14.960747Z"},"trusted":true},"execution_count":28,"outputs":[]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n\ndef visualize_sample(dataset, idx):\n    img, mask = dataset[idx]  # Fetch the image and mask using the dataset's __getitem__ method\n    fig, ax = plt.subplots(1, 2)\n    ax[0].imshow(img.permute(1, 2, 0))  # Assuming img is a PyTorch tensor of shape [C, H, W]\n    ax[0].set_title(\"Image\")\n    ax[1].imshow(mask, cmap='gray')  # Assuming mask is a PyTorch tensor of shape [C, H, W] and C=1 for grayscale\n    ax[1].set_title(\"Mask\")\n    plt.show()\n\n# Example usage\nvisualize_sample(train_dataset, 5)  # Visualize the first sample in the train dataset\n","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:34:14.963031Z","iopub.execute_input":"2024-04-28T16:34:14.963408Z","iopub.status.idle":"2024-04-28T16:34:15.439324Z","shell.execute_reply.started":"2024-04-28T16:34:14.963382Z","shell.execute_reply":"2024-04-28T16:34:15.438343Z"},"trusted":true},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"idx = 0\n\nimg, mask = train_dataset[idx]\nprint(img.shape, mask.shape)\n#print(mask)\nf, (ax1, ax2) = plt.subplots(1, 2, figsize=(10,5))\n        \nax1.set_title('IMAGE')\nax1.imshow(img.permute(1,2,0).squeeze())\n        \nax2.set_title('GROUND TRUTH')\nax2.imshow(mask.squeeze(),cmap = 'gray')\nmask_segmap =decode_segmap(mask.squeeze().numpy())\n\nax2.imshow(mask_segmap)","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:34:15.440600Z","iopub.execute_input":"2024-04-28T16:34:15.441001Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stdout","text":"torch.Size([3, 360, 480]) torch.Size([360, 480])\n","output_type":"stream"},{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"<matplotlib.image.AxesImage at 0x7d0ef00eecb0>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x500 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"## Training loop","metadata":{"id":"CFIdlVWviBYl"}},{"cell_type":"code","source":"# bc_train = 367 // batch_size # count of mini_batch train\n# bc_eval = 101 // batch_size  # count of mini_batch validation\n# bc_test = 233 // batch_size\n\n# epochs = 20\n# save_every = 200\ntotal_run :int = 1","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def log_image_table(X_batch, outputs, mask_batch, e):\n    table = wandb.Table(columns = [\"images\", \"predictions\", \"targets\"] \n            )\n    for X_img, output, mask in zip(X_batch.to(\"cpu\"), outputs.to(\"cpu\"), mask_batch.to(\"cpu\")):\n        segmap_pred = decode_segmap(output.data.max(0)[1].numpy())#pass the max prob channel\n        segmap_gt = decode_segmap(mask.numpy())\n        \n        table.add_data(wandb.Image(X_img.numpy().transpose(1,2,0)*255), \n                  wandb.Image(segmap_pred), \n                  wandb.Image(segmap_gt)\n                 )\n    wandb.log({f\"predictions_table \": table}, commit = False) #lets commit to the server with the metrics","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:34:16.185160Z","iopub.execute_input":"2024-04-28T16:34:16.185566Z","iopub.status.idle":"2024-04-28T16:34:16.195308Z","shell.execute_reply.started":"2024-04-28T16:34:16.185534Z","shell.execute_reply":"2024-04-28T16:34:16.194315Z"},"trusted":true},"execution_count":32,"outputs":[]},{"cell_type":"code","source":"def validation_loop(model, val_loader, criterion,e, log_images = False, batch_idx = 0):\n    \"\"\" params: model, val_loader,loss function, \n        flag log_images: to decide to log the predictions in table\n        flag batch_idx : to log a single batch consistently over all epochs, default 0th batch, \n        \n        returns validation loss and accuracy averaged for that epoch \"\"\"\n    model.eval()\n    val_loss = 0\n    tp, fp, fn, tn = [0] *4\n    with torch.inference_mode():\n        cum_jacc = 0\n        for step, (X_batch, mask_batch)in enumerate(val_loader):\n            \n            X_batch, mask_batch = X_batch.to(device), mask_batch.to(device)\n            outputs= model(X_batch.float())\n            val_loss += criterion(outputs, mask_batch.long())* X_batch.size(0)\n            _, predicted_classes = torch.max(outputs, dim=1)# we will get channel number corresponding to highest prob at each pixel\n            \n            #print(predicted_classes.shape)\n            \n            this_tp, this_fp, this_fn, this_tn = metrics.get_stats(\n                predicted_classes, mask_batch.long(), mode = \"multiclass\", num_classes= 12\n                                                                    )\n            tp += this_tp\n            fp += this_fp\n            fn += this_fn\n            tn += this_tn     \n            if step == batch_idx and log_images:\n                log_image_table(X_batch, outputs, mask_batch, e)\n                \n        iou_score = metrics.iou_score(sum(tp), sum(fp), sum(fn), sum(tn), reduction = 'micro')\n        return val_loss/len(val_loader.dataset), iou_score\n            \n        ","metadata":{"execution":{"iopub.status.busy":"2024-04-28T16:34:16.196906Z","iopub.execute_input":"2024-04-28T16:34:16.197291Z","iopub.status.idle":"2024-04-28T16:34:16.209896Z","shell.execute_reply.started":"2024-04-28T16:34:16.197239Z","shell.execute_reply":"2024-04-28T16:34:16.208795Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"for run in range(total_run):\n    config ={\"learning_rate\": 5e-4,\n                        \"batch_size\": 10,\n                        \"epochs\": 1200,\n                       } \n    wandb.init(project ='CAMVID,ENET DECODER ATTACHMENT',\n                name=f'relu applied at each bottleneck lr={config[\"learning_rate\"]}_bs={config[\"batch_size\"]}_epochs={config[\"epochs\"]}',\n               config=config)\n\n    config = wandb.config\n    \n    val_acc = 10e-4\n    val_error = 10e4\n    train_loader = DataLoader(train_dataset, config.batch_size, shuffle=True)\n    val_loader = DataLoader(val_dataset, config.batch_size , shuffle=False)\n    test_loader = DataLoader(test_dataset, config.batch_size , shuffle=False) \n    \n    n_steps_per_epoch = math.ceil(len(train_dataset)/config.batch_size)\n    tr_criterion = nn.CrossEntropyLoss(weight = tr_weights.to(device))\n    #vl_criterion = nn.CrossEntropyLoss(weight = vl_weights.to(device))\n    optimizer = torch.optim.Adam(encoder.parameters(), \n                             lr=config.learning_rate,\n                             weight_decay=2e-4)\n    \n    \n    model.to(device)\n    element_step_ct = 0\n    step_ct = 0\n    for e in range(config.epochs):\n          \n        model.train()\n    \n        for step, (X_batch,mask_batch) in enumerate(train_loader):\n            \n            # assign data to cpu/gpu\n            X_batch, mask_batch = X_batch.to(device), mask_batch.to(device) \n            out = model(X_batch.float())\n\n            optimizer.zero_grad()\n            train_loss = tr_criterion(out, mask_batch.long())\n            \n            # update weights\n            train_loss.backward()\n            optimizer.step()\n            element_step_ct += len(X_batch)\n            \n            train_metrics = {\"train/loss\": train_loss,#loss per batch\n                       \"train/epoch\": (step +1 +(n_steps_per_epoch*e))/n_steps_per_epoch,\n                       \"train:element_step_ct\":element_step_ct\n                      }\n            if step+1<n_steps_per_epoch:\n                wandb.log(train_metrics)\n            \n            step_ct +=1\n        \n        val_loss, jacc_acc = validation_loop(model, val_loader, tr_criterion,e, (e== config.epochs -1)) \n        val_metrics = {\"val/val_loss\": val_loss,\n                      \"val/val_accuracy\": jacc_acc}\n        \n        ##logging val metrics alongside train metrics\n        wandb.log({**train_metrics, **val_metrics })\n        \n        #print final achieved losses and accuracy at the end of each epoch\n        print(f\"Train loss: {train_loss:.3f},Valid_loss: {val_loss:.3f},Accuracy: {jacc_acc:.2f}\")\n        \n        if jacc_acc > val_acc:\n            checkpoint = {\n            'epochs' : e,\n            'state_dict' : model.state_dict(),\n            'jacc':jacc_acc,\n            }\n            torch.save(checkpoint, './encoder_camvid_{}th_epoch_indices_with_state_dic.pth'.format(e))\n            #wandb.log_artifact()\n            print ('Model is saved!')\n            val_acc = jacc_acc\n            \nwandb.finish()","metadata":{"id":"WQ6XJzl6Ta1_","outputId":"a3f62522-391d-4e05-f138-11c78a0d90cf","execution":{"iopub.status.busy":"2024-04-28T16:34:16.211468Z","iopub.execute_input":"2024-04-28T16:34:16.211819Z"},"trusted":true},"execution_count":null,"outputs":[{"name":"stderr","text":"\u001b[34m\u001b[1mwandb\u001b[0m: Currently logged in as: \u001b[33mdayaalex\u001b[0m. Use \u001b[1m`wandb login --relogin`\u001b[0m to force relogin\n","output_type":"stream"},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Tracking run with wandb version 0.16.6"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Run data is saved locally in <code>/kaggle/working/wandb/run-20240428_163416-yq2wz7tz</code>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":"Syncing run <strong><a href='https://wandb.ai/dayaalex/CAMVID%2CENET%20DECODER%20ATTACHMENT/runs/yq2wz7tz' target=\"_blank\">relu applied at each bottleneck lr=0.0005_bs=10_epochs=1200</a></strong> to <a href='https://wandb.ai/dayaalex/CAMVID%2CENET%20DECODER%20ATTACHMENT' target=\"_blank\">Weights & Biases</a> (<a href='https://wandb.me/run' target=\"_blank\">docs</a>)<br/>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View project at <a href='https://wandb.ai/dayaalex/CAMVID%2CENET%20DECODER%20ATTACHMENT' target=\"_blank\">https://wandb.ai/dayaalex/CAMVID%2CENET%20DECODER%20ATTACHMENT</a>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<IPython.core.display.HTML object>","text/html":" View run at <a href='https://wandb.ai/dayaalex/CAMVID%2CENET%20DECODER%20ATTACHMENT/runs/yq2wz7tz' target=\"_blank\">https://wandb.ai/dayaalex/CAMVID%2CENET%20DECODER%20ATTACHMENT/runs/yq2wz7tz</a>"},"metadata":{}},{"name":"stdout","text":"Train loss: 2.490,Valid_loss: 2.602,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.467,Valid_loss: 2.592,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.481,Valid_loss: 2.556,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.446,Valid_loss: 2.557,Accuracy: 0.04\nTrain loss: 2.434,Valid_loss: 2.541,Accuracy: 0.04\nTrain loss: 2.417,Valid_loss: 2.540,Accuracy: 0.04\nTrain loss: 2.409,Valid_loss: 2.541,Accuracy: 0.04\nTrain loss: 2.434,Valid_loss: 2.544,Accuracy: 0.04\nTrain loss: 2.440,Valid_loss: 2.542,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.405,Valid_loss: 2.539,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.419,Valid_loss: 2.539,Accuracy: 0.04\nTrain loss: 2.429,Valid_loss: 2.542,Accuracy: 0.04\nTrain loss: 2.419,Valid_loss: 2.541,Accuracy: 0.04\nTrain loss: 2.421,Valid_loss: 2.543,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.416,Valid_loss: 2.545,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.416,Valid_loss: 2.545,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.428,Valid_loss: 2.540,Accuracy: 0.04\nTrain loss: 2.416,Valid_loss: 2.542,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.402,Valid_loss: 2.543,Accuracy: 0.04\nModel is saved!\nTrain loss: 2.398,Valid_loss: 2.544,Accuracy: 0.04\n","output_type":"stream"}]},{"cell_type":"code","source":"\ntorch.save(checkpoint, './encoder camvid {}th epoch, indices with state_dic.pth'.format(e))\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"############################# VALID LOADER ##############################\nimg_aug_func, mask_aug_func = Augmentation('val')\n\ndual_transform = DualTransform(img_aug_func, mask_aug_func)\n\ntransform_norm = None\n#transforms.Compose([\n    #transforms.ToTensor(),\n    #transforms.Normalize(mean=[0.4119, 0.4251, 0.4327], std=[0.3047, 0.3097, 0.3054])\n#])\n\n# Instantiate your dataset\ntest_dataset = CustomDataset('/kaggle/input/CamVid/test/',\n                               '/kaggle/input/CamVid/testannot/',3 , \n                               norm_transform=transform_norm, dual_transform=dual_transform)\n\n# Create your data loader\ntest_loader = DataLoader(test_dataset, batch_size=10, shuffle=True)\n\n# Now you can iterate over train_loader to calculate mean and standard deviation\nmean_test, std_test = verify_dataset_normalization(test_loader)\nprint('mean and std dev of test set :', mean_test,std_test)\n\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"\ndef test_model(model, epochs,test_loaders, criterion, optimizer,device):\n    jacc_t_acc =[]   \n    test_losses =[]\n    for e in range(1,epochs+1):\n        model.to(device)\n        with torch.no_grad():\n            model.eval()\n            \n            test_loss = 0\n            cum_test_iou =0\n            cum_jacc_t = 0\n            # Validation loop\n            for inputs, labels in tqdm(val_loader):\n                \n                inputs, labels = inputs.to(device), labels.squeeze(1).to(device)\n                    \n                out, id1,id2 = model(inputs)\n                loss = criterion(out, labels.long())\n                test_loss += loss.item()\n                preds_ohe = torch.argmax(out, dim=1)\n                  \n                #cum_test_iou += calculate_mIoU(preds_ohe, labels, 2) \n                target = labels.squeeze(1)         \n                cum_jacc_t += jaccard(preds_ohe,target)\n\n        test_losses.append(test_loss/bc_test)\n        #test_acc.append(cum_test_iou/batch_size)\n        jacc_t_acc.append(cum_jacc_t/bc_test)\n        print ('Epoch {}/{}...'.format(e, epochs),\n                \n                'test_Loss {:6f}'.format(test_losses[-1]),\n                #'test_acc {:6f}'.format(test_acc[-1]),\n                'jacc_t_acc {:6f}'.format(jacc_t_acc[-1]))\n        \n    print ('Epoch {}/{}...'.format(e, epochs),\n           'Total Mean test loss:{:6f}'.format(sum(test_losses)/epochs))\n    return  test_losses, jacc_t_acc\n      \n      ","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_losses, test_acc = test_model(encoder, epochs,test_loader, criterion, optimizer, device)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Infer using the trained model","metadata":{"id":"bdp5YLb0ibFO"}},{"cell_type":"code","source":"def show_images(images, in_row=True):\n    '''\n    Helper function to show 3 images\n    '''\n    total_images = len(images)\n\n    rc_tuple = (1, total_images)\n    if not in_row:\n        rc_tuple = (total_images, 1)\n    \n    #figure = plt.figure(figsize=(20, 10))\n    for ii in range(len(images)):\n        plt.subplot(*rc_tuple, ii+1)\n        plt.title(images[ii][0])\n        plt.axis('off')\n        plt.imshow(images[ii][1])\n    plt.show()","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"checkpoint = torch.load('/kaggle/working/encoder idd 99th epoch, indices with state_dic.pth')\nenc = ENet_encoder(12)\nenc = enc.to(device)\nstate_dict = checkpoint['state_dict']\nenc.load_state_dict(state_dict)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"h = 360\nw = 480\n\nimage_path = '/kaggle/input/camvid-seg-12/CamVid/test/0001TP_008730.png'\n# Assuming the dataset is camvid\n\ntmg_ = plt.imread(image_path)\ntmg_ = cv2.resize(tmg_, (h, w), cv2.INTER_NEAREST)\ntmg = torch.tensor(tmg_).unsqueeze(0).float()\ntmg = tmg.transpose(2, 3).transpose(1, 2)\ntmg = tmg.to(device)\n\nwith torch.no_grad():\n    out1, id1, id2 = enc(tmg.float())\n    out1 = out1.squeeze(0)\nb_ = out1.data.max(0)[1].cpu().numpy()\n\ndecoded_segmap = decode_segmap(b_)\n\ngt_path = image_path.replace('test','testannot') \ngt = plt.imread(gt_path)\ngt = cv2.resize(gt, (h, w), cv2.INTER_NEAREST)\n\nimages = {\n 0 : ['Input Image', tmg_],\n 1 : ['Predicted Segmentation', decoded_segmap],\n 2 : ['ground truth', gt]\n}\n\nplt.title('cross_entropy_multi-class_100_epochs')\n\nshow_images(images)\n","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"!pip install torchsummary\nfrom torchsummary import summary\n\nsummary(enc, input_size=(3, 360, 480))","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}